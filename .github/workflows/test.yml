name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

#    services:
#      # Label used to access the service container
#      postgres:
#        # Docker Hub image
#        image: postgres
#        # Provide the password for postgres
#        env:
#          POSTGRES_PASSWORD: '${{secrets.DB_PASSWORD}}'
#          POSTGRES_USER: '${{secrets.DB_USER}}'
#          POSTGRES_DB: '${{env.DB_NAME}}'
#        # Set health checks to wait until postgres has started
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Run Tests
        run: mvn -B test
#        env:
#          DB_HOST: '${{env.DB_HOST}}'
#          DB_PORT: '${{env.DB_PORT}}'
#          DB_NAME: '${{env.DB_NAME}}'
#          DB_USER: '${{secrets.DB_USER}}'
#          DB_PASSWORD: '${{secrets.DB_PASSWORD}}'
#          DB_DDL: '${{env.DB_DDL}}'
#          INIT_MODE: '${{env.INIT_MODE}}'


      - name: Determine coverage
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-workflow-summary: false

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Check for coverage failure
        uses: cicirello/jacoco-badge-generator@v2
        with:
          on-missing-report: fail
          fail-if-coverage-less-than: 80
          fail-if-branches-less-than: 80